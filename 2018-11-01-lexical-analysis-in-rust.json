{"type":"PR","pr":{"number":1,"head":"d235ac6c9ba4e288e7949de002f953f34dd0e4e9"},"user":"s-roth","status":"draft","branch":"cms/2018-11-01-lexical-analysis-in-rust","collection":"blog","title":"Lexical Analysis in Rust","description":"This is the first post in a series about building a programming language with Rust. In this post we introduce a context-free grammar and use it to build a \"lexer,\" which allows us to validate the syntax of programs written in our language.","objects":{"entry":{"path":"src/pages/blog/2018-11-01-lexical-analysis-in-rust.md","sha":"494d8f2c120999b4be2c1ec863aa49beb067bf5c"},"files":[]},"timeStamp":"2018-11-01T14:03:30.290Z"}